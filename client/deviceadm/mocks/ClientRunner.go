// Copyright 2016 Mender Software AS
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
package mocks

import deviceadm "github.com/mendersoftware/deviceauth/client/deviceadm"
import log "github.com/mendersoftware/go-lib-micro/log"
import mock "github.com/stretchr/testify/mock"
import requestid "github.com/mendersoftware/go-lib-micro/requestid"

// ClientRunner is an autogenerated mock type for the ClientRunner type
type ClientRunner struct {
	mock.Mock
}

// AddDevice provides a mock function with given fields: req, client
func (_m *ClientRunner) AddDevice(req deviceadm.AdmReq, client requestid.ApiRequester) error {
	ret := _m.Called(req, client)

	var r0 error
	if rf, ok := ret.Get(0).(func(deviceadm.AdmReq, requestid.ApiRequester) error); ok {
		r0 = rf(req, client)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UseLog provides a mock function with given fields: l
func (_m *ClientRunner) UseLog(l *log.Logger) {
	_m.Called(l)
}

var _ deviceadm.ClientRunner = (*ClientRunner)(nil)
