swagger: '2.0'
info:
  version: '0.1.0'
  title: Device authentication
  description: |
      An API for device authentication handling. Not exposed via the API Gateway,
      internal use only.

basePath: '/api/internal/v1/devauth/'
host: 'mender-device-auth:8080'
schemes:
  - http

paths:
  /tokens/verify:
    post:
     summary: Check the validity of a token
     description: |
        Besides the basic validity check, checks the token expiration time and
        user-initiated token revocation. Services which intend to use it should
        be correctly set up in the gateway\'s configuration.
     parameters:
       - name: Authorization
         in: header
         description: The token in base64-encoded form.
         required: true
         type: string
     responses:
        200:
            description: The token is valid.
        400:
            description: Missing or malformed request parameters.
        401:
            description: Verification failed, authentication should not be granted.
        403:
            description: Token has expired - apply for a new one.
        500:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'
  /tenant/{tenant_id}/limits/max_devices:
    get:
      summary: Max device count limit
      parameters:
        - name: tenant_id
          in: path
          type: string
          description: Tenant ID.
          required: true
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/Limit"
        400:
          description: |
            Invalid parameters. See error message for details.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    put:
      summary: Update max device count limit
      parameters:
        - name: tenant_id
          in: path
          type: string
          description: Tenant ID.
          required: true
        - name: limit
          in: body
          required: true
          schema:
            $ref: "#/definitions/Limit"
      responses:
        204:
          description: Limit information updated.
        400:
          description: |
              The request body is malformed.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"

  /tenants:
    post:
      summary: Provision a new tenant
      description: |
          Sets up all tenant-related infrastructure, e.g. a migrated tenant's database.
      parameters:
        - name: tenant
          in: body
          description: New tenant descriptor.
          required: true
          schema:
            $ref: "#/definitions/NewTenant"
      responses:
        201:
          description: Tenant was successfully provisioned.
        400:
          description: Bad request.
        500:
          description: Internal server error.
          schema:
           $ref: "#/definitions/Error"
  /devices:
    post:
      summary: Submit a preauthorized device.
      description: |
          Adds a given device/authentication data set in the 'preauthorized' state.
          Designed to be called from admission, with precomputed device_id and auth_set_id.
      parameters:
        - name: pre_auth_request
          in: body
          description: Preauthentication request.
          required: true
          schema:
            $ref: "#/definitions/PreAuthRequest"
      responses:
        201:
          description: Device submitted.
          headers:
            Location:
              type: string
              description: Link to the created auth set.
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Device already exists.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  NewTenant:
    description: New tenant descriptor.
    type: object
    properties:
      tenant_id:
        description: New tenant's ID.
        type: string
    example:
      application/json:
          tenant_id: "58be8208dd77460001fe0d78"
  Limit:
    description: Tenant account limit.
    type: object
    properties:
      limit:
        type: integer
    required:
      - limit
    example:
      application/json:
        limit: 123
  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      application/json:
          error: "failed to decode device group data: JSON payload is empty"
          request_id: "f7881e82-0492-49fb-b459-795654e7188a"
  PreAuthRequest:
    type: object
    properties:
      device_id:
        type: string
        description: Precomputed device ID.
      auth_set_id:
        type: string
        description: Precomputed auth set ID.
      id_data:
        type: string
        description: Vendor-specific JSON representation of the device identity data (MACs, serial numbers, etc.).
      pubkey:
        type: string
        description: The device's public key, generated by the device or pre-provisioned by the vendor.
    required:
      - auth_set_id
      - device_id
      - id_data
      - pubkey
    example:
      application/json:
        device_id: "f7881e82-0492-49fb-b459-795654e7188a"
        auth_set_id: "a7881e82-0492-49fb-b459-795654e7188f"
        id_data: "{\"mac\":\"00:01:02:03:04:05\"}"
        pubkey: "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzogVU7RGDilbsoUt/DdH\nVJvcepl0A5+xzGQ50cq1VE/Dyyy8Zp0jzRXCnnu9nu395mAFSZGotZVr+sWEpO3c\nyC3VmXdBZmXmQdZqbdD/GuixJOYfqta2ytbIUPRXFN7/I7sgzxnXWBYXYmObYvdP\nokP0mQanY+WKxp7Q16pt1RoqoAd0kmV39g13rFl35muSHbSBoAW3GBF3gO+mF5Ty\n1ddp/XcgLOsmvNNjY+2HOD5F/RX0fs07mWnbD7x+xz7KEKjF+H7ZpkqCwmwCXaf0\niyYyh1852rti3Afw4mDxuVSD7sd9ggvYMc0QHIpQNkD4YWOhNiE1AB0zH57VbUYG\nUwIDAQAB\n-----END PUBLIC KEY-----\n"
